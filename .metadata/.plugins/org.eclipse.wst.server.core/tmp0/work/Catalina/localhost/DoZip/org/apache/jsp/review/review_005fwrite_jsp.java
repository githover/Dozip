/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-28 10:50:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class review_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"review_write_wrap\">\r\n");
      out.write("	<hr/>\r\n");
      out.write("		<div class=\"review_guide\">\r\n");
      out.write("			<p>후기 작성 가이드</p>\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li>필수 항목을 모두 채워주세요.</li>\r\n");
      out.write("				<li>참고가 되는 사진을 같이 올려주시면 추가 포인트 1000p가 지급됩니다.</li>\r\n");
      out.write("				<li>베스트 후기로 선정되면 추가 포인트 5000p가 지급됩니다.</li>\r\n");
      out.write("				<li>상세히 적어주시면 많은 사람들에게 큰 도움이 될 수 있습니다.</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<form class=\"review_write_form\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>제목</th> <td><input type=\"text\" name=\"r_title\" id=\"r_title\" placeholder=\"제목을 입력해주세요\"/></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>시공정보</th> <td><button id=\"load_btn\">계약정보 불러오기</button></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr id=\"load_cont\">\r\n");
      out.write("					<th></th><td>업체명 : 불러온정보<br/>공간정보 : 불러온정보<br/>공사기간 : 불러온정보 <br/> 평수 : 불러온정보<br/></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>태그선택</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select name=\"choice1\" class=\"choice_group\">\r\n");
      out.write("							<option selected>스타일</option>\r\n");
      out.write("							<option value=\"모던\">모던</option>\r\n");
      out.write("							<option value=\"심플/미니멀\">심플/미니멀</option>\r\n");
      out.write("							<option value=\"내추럴\">내추럴</option>\r\n");
      out.write("							<option value=\"빈티지\">빈티지</option>\r\n");
      out.write("							<option value=\"럭셔리\">럭셔리</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<select name=\"choice2\" class=\"choice_group\">\r\n");
      out.write("							<option selected>비용</option>\r\n");
      out.write("							<option value=\"1000만원 이하\">1000만원 이하</option>\r\n");
      out.write("							<option value=\"1000만원대\">1000만원대</option>\r\n");
      out.write("							<option value=\"2000만원대\">2000만원대</option>\r\n");
      out.write("							<option value=\"3000만원대\">3000만원대</option>\r\n");
      out.write("							<option value=\"4000만원대\">4000만원대</option>\r\n");
      out.write("							<option value=\"5000만원대\">5000만원대</option>\r\n");
      out.write("							<option value=\"6000만원 이상\">6000만원 이상</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<select name=\"choice3\" class=\"choice_group\">\r\n");
      out.write("							<option selected>기타</option>\r\n");
      out.write("							<option value=\"one\">1번</option>\r\n");
      out.write("							<option value=\"two\">2번</option>\r\n");
      out.write("							<option value=\"three\">3번</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>내용</th><td><textarea  name=\"r_cont\" id=\"r_cont\"  placeholder=\"내용을 입력해주세요\"></textarea></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>사진첨부</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"file\" id=\"image\" accept=\"image/*\" onchange=\"setThumbnail(event);\"/>\r\n");
      out.write("    					<div id=\"image_container\"></div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>종합별점</th>\r\n");
      out.write("					<td id=\"test\">\r\n");
      out.write("						<div class=\"star_area\">\r\n");
      out.write("						<div class=\"star-rating space-x-4 mx-auto\">\r\n");
      out.write("							<input type=\"radio\" id=\"5-stars\" name=\"rating\" value=\"5\"	v-model=\"ratings\"  onclick=\"getScore(event);\"/>\r\n");
      out.write("								<label for=\"5-stars\" class=\"star pr-4\">★</label>\r\n");
      out.write("							<input type=\"radio\" id=\"4-stars\" name=\"rating\" value=\"4\"	v-model=\"ratings\"  onclick=\"getScore(event);\"/>\r\n");
      out.write("								<label for=\"4-stars\" class=\"star\">★</label>\r\n");
      out.write("							<input type=\"radio\" id=\"3-stars\" name=\"rating\" value=\"3\" v-model=\"ratings\"  onclick=\"getScore(event);\" />\r\n");
      out.write("								<label for=\"3-stars\" class=\"star\">★</label>\r\n");
      out.write("							<input type=\"radio\"	id=\"2-stars\" name=\"rating\" value=\"2\" v-model=\"ratings\"  onclick=\"getScore(event);\"/>\r\n");
      out.write("								<label for=\"2-stars\" class=\"star\">★</label>\r\n");
      out.write("							<input type=\"radio\" id=\"1-star\"	name=\"rating\" value=\"1\" v-model=\"ratings\"  onclick=\"getScore(event);\"/>\r\n");
      out.write("								<label for=\"1-star\"	class=\"star\">★</label>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"star_score\">\r\n");
      out.write("							<span id=\"result\">\r\n");
      out.write("								<script>\r\n");
      out.write("									function getScore(event) {\r\n");
      out.write("										document.getElementById('result').innerText = event.target.value;\r\n");
      out.write("									}\r\n");
      out.write("								</script> \r\n");
      out.write("							</span>\r\n");
      out.write("							점\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr><td colspan=\"2\" id=\"btn_cell\"><button type=\"submit\" id=\"r_submit_btn\">후기등록하기</button></td></tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	 <script>\r\n");
      out.write("      function setThumbnail(event) {\r\n");
      out.write("        var reader = new FileReader();\r\n");
      out.write("\r\n");
      out.write("        reader.onload = function(event) {\r\n");
      out.write("          var img = document.createElement(\"img\");\r\n");
      out.write("          img.setAttribute(\"src\", event.target.result);\r\n");
      out.write("          document.querySelector(\"div#image_container\").appendChild(img);\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        reader.readAsDataURL(event.target.files[0]);\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
