/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-27 02:01:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mem_005fjoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>회원가입</title>\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"/DoZip/css/login.css\" />\r\n");
      out.write("	<script src=\"/DoZip/js/jquery.js\"></script>\r\n");
      out.write("	<script src=\"/DoZip/js/member.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"join_wrap\">\r\n");
      out.write("	<div id=\"join_title\"><p>회원가입</p></div>\r\n");
      out.write("	<form id=\"join_form_box\" method=\"post\"  name=\"m\"  onsubmit=\"return join_check();\" action=\"member_join_ok.do\">\r\n");
      out.write("		<table id=\"join_form_table\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>아이디</th>\r\n");
      out.write("				<td id=\"id_box\">\r\n");
      out.write("					<input type=\"text\"  name=\"mem_id\"  id=\"mem_id\" placeholder=\"아이디를 입력해주세요\" oninput=\"id_check();\"/><br/>\r\n");
      out.write("					<!-- <button type=\"button\"  onclick=\"id_check();\">아이디체크</button><br/> -->\r\n");
      out.write("					<span class=\"idcheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>비밀번호</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"password\"  name=\"mem_pwd\"  id=\"mem_pwd\" placeholder=\"비밀번호를 입력해주세요(4자이상)\" oninput=\"pw_check();\"/><br/>\r\n");
      out.write("					<span class=\"pwdcheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>비밀번호확인</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"password\"  name=\"mem_pwd_check\"  id=\"mem_pwd_check\" placeholder=\"비밀번호를 다시 입력해주세요\" oninput=\"double_check();\"/><br/>\r\n");
      out.write("					<span class=\"doublecheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\"  name=\"mem_name\"  id=\"mem_name\" placeholder=\"이름을 입력해주세요\" oninput=\"name_check();\"/><br/>\r\n");
      out.write("					<span class=\"namecheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>연락처</th>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\"  name=\"mem_tel\"  id=\"mem_tel\" placeholder=\"-없이 숫자만 입력해주세요\" oninput=\"tel_check();\"/><br/>\r\n");
      out.write("					<span class=\"telcheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>이메일주소</th>\r\n");
      out.write("				<td id=\"emailbox\">\r\n");
      out.write("					<input type=\"text\"  name=\"mem_email\"  id=\"mem_email\" placeholder=\"이메일주소를 입력해주세요\" oninput=\"email_check();\"/>\r\n");
      out.write("					<span>@</span>\r\n");
      out.write("					<input type=\"text\"  name=\"mem_domain\"  id=\"mem_domain\" placeholder=\"도메인주소를 입력해주세요\" oninput=\"email_check();\"/>\r\n");
      out.write("					<select name=\"domain_list\" id=\"domain_list\" onchange=\"changeSelect(this.value);\" onclick=\"email_check();\">\r\n");
      out.write("						<option selected>직접입력</option>\r\n");
      out.write("						<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("						<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("						<option value=\"gmail.com\">gamil.com</option>\r\n");
      out.write("					</select>\r\n");
      out.write("					<br/>\r\n");
      out.write("					<span class=\"emailcheck\"></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"join_agree\">\r\n");
      out.write("			<label id=\"all_check\"><span class=\"agree_text\"><input type=\"checkbox\"  name=\"all\"  onclick=\"allselect(this.checked)\"></span><span class=\"agree_text\">전체동의</span></label>\r\n");
      out.write("			<hr width=\"100%\" />\r\n");
      out.write("			<label><span class=\"agree_text\"><input type=\"checkbox\" name=\"chk\" onclick=\"checkSelectAll()\"></span><span class=\"agree_text\" id=\"text1\">(필수)</span><span class=\"agree_text\" id=\"text2\"><a href=\"#\" >개인정보 처리방침</a>에 동의</span></label>\r\n");
      out.write("			<label><span class=\"agree_text\"><input type=\"checkbox\" name=\"chk\" onclick=\"checkSelectAll()\"></span><span class=\"agree_text\" id=\"text1\">(필수)</span><span class=\"agree_text\" id=\"text2\"><a href=\"#\" >이용약관</a>에 동의</span></label>\r\n");
      out.write("			<label><span class=\"agree_text\"><input type=\"checkbox\" name=\"chk\" onclick=\"checkSelectAll()\"></span><span class=\"agree_text\" id=\"text1\">(선택)</span><span class=\"agree_text\" id=\"text2\"><a href=\"#\" >인테리어 정보 및 마케팅 수신</a>에 동의</span></label>\r\n");
      out.write("			<span id=\"text3\">※개인정보 처리방침에 동의해주세요.</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<button id=\"join_btn\"  type=\"submit\"  disabled=\"disabled\">가 입 하 기</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
