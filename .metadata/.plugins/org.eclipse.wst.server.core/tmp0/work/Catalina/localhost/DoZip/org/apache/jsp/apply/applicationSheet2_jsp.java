/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-29 04:54:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apply;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class applicationSheet2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"./css/apply_style_02.css\">  \r\n");
      out.write("  <script src=\"./js/apply.js\" defer></script>\r\n");
      out.write("  <script src=\"./js/jquery.js\"></script>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"/> <!--달력css-->\r\n");
      out.write("  <script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("  <script src=\"http://code.jquery.com/ui/1.11.4/jquery-ui.min.js\"></script>\r\n");
      out.write("  <script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/i18n/datepicker-ko.js\"></script>\r\n");
      out.write("  <script src=\"./js/sessionStorage.js\"></script>\r\n");
      out.write(" <script>\r\n");
      out.write(" function check(){\r\n");
      out.write("	var est_bud = document.getElementById(\"estimate_cost\");\r\n");
      out.write("	var est_start = document.getElementById(\"est_start\");\r\n");
      out.write("	var est_end = document.getElementById(\"est_end\");\r\n");
      out.write("	\r\n");
      out.write("	if(est_bud.value == \"\") {\r\n");
      out.write("		alert('예산을 입력해주세요!');\r\n");
      out.write("		estimate_cost.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	else if(est_start.value == \"\") {\r\n");
      out.write("		alert('시작일을 알려주세요!');\r\n");
      out.write("		est_start.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	else if(est_end.value == \"\") {\r\n");
      out.write("		alert('종료일을 알려주세요!');\r\n");
      out.write("		est_end.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write(" }\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write("  <title>Step 2</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write(" <form method=\"post\" onsubmit=\"return check();\" action=\"estimate_apply2_ok.do\">\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <div id=\"estimate_step02\">\r\n");
      out.write("    <section aria-label=\"예산 선택\" class=\"estimate_yourcost\">\r\n");
      out.write("      <div class=\"title\">\r\n");
      out.write("        <h2>예산과 일정을 알려주세요.</h2><h3>2/4</h3>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div>\r\n");
      out.write("        <p>단 한번 입력으로 조건에 맞는 전문가들과 간편하게 상담 하세요.</p><br />\r\n");
      out.write("      </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <div class=\"estimate_box\">\r\n");
      out.write("        <h3>예산</h3>\r\n");
      out.write("        <div class=\"your_cost\">\r\n");
      out.write("          <input type=\"text\" id=\"estimate_cost\" name=\"est_bud\" maxlength=\"7\" placeholder=\"0\" onkeyup=\"inputNumberFormat(this);\" />\r\n");
      out.write("        <h3>만원</h3>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br/><br/><br/><br/><hr/>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"estimate_date\">\r\n");
      out.write("          <h3>희망 시공일정</h3><br/><br/>\r\n");
      out.write("          오늘 날짜 : <span id=\"today\"></span>\r\n");
      out.write("        <form>\r\n");
      out.write("          <br/>\r\n");
      out.write("          <label for=\"est_start\">시작일</label>\r\n");
      out.write("          <input type=\"text\" name=\"est_start\" id=\"est_start\">\r\n");
      out.write("          ~\r\n");
      out.write("          <label for=\"est_end\">종료일</label>\r\n");
      out.write("          <input type=\"text\" name=\"est_end\" id=\"est_end\">\r\n");
      out.write("        </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- id : 고유한 식별 목적\r\n");
      out.write("             class : 재사용을 목적\r\n");
      out.write("             name : 컨트롤 요소값(value)을 서버로 전송하기위함-->\r\n");
      out.write("\r\n");
      out.write("             <div class=\"nextpage\">\r\n");
      out.write("              <button class=\"button\" id=\"go-back\" onclick=\"location.href='estimate_apply.do'\">이전</button>\r\n");
      out.write("              <button class=\"button\" type=\"submit\" id=\"go-next\" onclick=\"SessionStorage_page02()\">다음</button>\r\n");
      out.write("            </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write(" </form>\r\n");
      out.write(" ");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
