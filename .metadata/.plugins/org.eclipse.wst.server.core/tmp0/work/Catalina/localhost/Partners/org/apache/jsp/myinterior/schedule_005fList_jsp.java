/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-27 02:07:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myinterior;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class schedule_005fList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("		var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\r\n");
      out.write("		var calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write("			headerToolbar : {\r\n");
      out.write("				left : 'prevYear,prev,next,nextYear today',\r\n");
      out.write("				center : 'title',\r\n");
      out.write("				right : 'dayGridMonth,dayGridWeek,dayGridDay'\r\n");
      out.write("			},\r\n");
      out.write("			initialDate : '2022-09-12',\r\n");
      out.write("			navLinks : true, // can click day/week names to navigate views\r\n");
      out.write("			editable : true,\r\n");
      out.write("			dayMaxEvents : true, // allow \"more\" link when too many events\r\n");
      out.write("			events : [ {\r\n");
      out.write("				title : 'All Day Event',\r\n");
      out.write("				start : '2022-09-01'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Long Event',\r\n");
      out.write("				start : '2022-09-07',\r\n");
      out.write("				end : '2022-09-10'\r\n");
      out.write("			}, {\r\n");
      out.write("				groupId : 999,\r\n");
      out.write("				title : 'Repeating Event',\r\n");
      out.write("				start : '2022-09-09T16:00:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				groupId : 999,\r\n");
      out.write("				title : 'Repeating Event',\r\n");
      out.write("				start : '2022-09-16T16:00:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Conference',\r\n");
      out.write("				start : '2022-09-11',\r\n");
      out.write("				end : '2022-09-13'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Meeting',\r\n");
      out.write("				start : '2022-09-12T10:30:00',\r\n");
      out.write("				end : '2022-09-12T12:30:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Lunch',\r\n");
      out.write("				start : '2022-09-12T12:00:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Meeting',\r\n");
      out.write("				start : '2022-09-12T14:30:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Happy Hour',\r\n");
      out.write("				start : '2022-09-12T17:30:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Dinner',\r\n");
      out.write("				start : '2022-09-12T20:00:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Birthday Party',\r\n");
      out.write("				start : '2022-09-13T07:00:00'\r\n");
      out.write("			}, {\r\n");
      out.write("				title : 'Click for Google',\r\n");
      out.write("				url : 'http://google.com/',\r\n");
      out.write("				start : '2022-09-28'\r\n");
      out.write("			} ]\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		calendar.render();\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$('.fc-event-title').click(function() {\r\n");
      out.write("			alert('hello~');\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1>일정및 정산관리</h1>\r\n");
      out.write("<div id='calendar' style=\"width: 80%; margin: 100px;\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
